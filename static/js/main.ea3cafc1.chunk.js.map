{"version":3,"sources":["components/Board.js","App.js","serviceWorker.js","index.js"],"names":["clickable","Board","flag","letMeIn","useState","BoardArray","setBoardArray","BoardColumns","setBoardColumns","BoardRows","setBoardRows","Player","setPlayer","useEffect","window","innerWidth","innerHeight","a","Array","fill","b","map","i","blockClickHandler","x","y","changeUser","splitHandler","incrementHandler","setTimeout","items","item","reds","greens","row","block","document","getElementById","style","display","checkWinningStats","setToZeroHandler","position","className","id","rowindex","key","height","col","colindex","Fragment","border","onClick","backgroundColor","textAlign","margin","opacity","location","reload","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ea3cafc1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Board.css'\r\nlet clickable = true\r\n\r\nconst Board = () => {\r\n\r\n    let flag = 0\r\n    let letMeIn = true\r\n\r\n    const [ BoardArray, setBoardArray ] = useState([])\r\n    const [ BoardColumns, setBoardColumns ] = useState('')\r\n    const [ BoardRows, setBoardRows ] = useState('')\r\n    const [ Player, setPlayer ] = useState('red')\r\n\r\n    useEffect(() => {\r\n        setBoardColumns(~~(window.innerWidth/50))\r\n        setBoardRows(~~((window.innerHeight)/50))\r\n        let a = new Array(BoardRows).fill(0)\r\n        let b = a.map(i => a[i] = new Array(BoardColumns).fill([0,null]))\r\n        setBoardArray(b)\r\n    },[BoardRows,BoardColumns])\r\n\r\n    const blockClickHandler = (x,y,Player) => {\r\n        if(clickable){\r\n        flag+=1\r\n        if(Player){\r\n                changeUser()\r\n                if((x === 0 && y === 0) || (x === 0 && y === BoardColumns-1) || (y === 0 && x === BoardRows-1) || (x === BoardRows-1 && y === BoardColumns-1)){\r\n                    return BoardArray[x][y][0] === 1 ? splitHandler(x,y,'corner') : incrementHandler(x,y)\r\n                }else if(x === 0 || y === 0 || x === BoardRows-1 || y === BoardColumns-1){\r\n                    return BoardArray[x][y][0] === 2 ? splitHandler(x,y,'side') : incrementHandler(x,y)\r\n                }else{  \r\n                    return BoardArray[x][y][0] === 3 ? splitHandler(x,y,'center') : incrementHandler(x,y)\r\n                }\r\n            }else{\r\n                setTimeout(() => {\r\n                    if((x === 0 && y === 0) || (x === 0 && y === BoardColumns-1) || (y === 0 && x === BoardRows-1) || (x === BoardRows-1 && y === BoardColumns-1)){\r\n                        return BoardArray[x][y][0] === 1 ? splitHandler(x,y,'corner') : incrementHandler(x,y)\r\n                    }else if(x === 0 || y === 0 || x === BoardRows-1 || y === BoardColumns-1){\r\n                        return BoardArray[x][y][0] === 2 ? splitHandler(x,y,'side') : incrementHandler(x,y)\r\n                    }else{  \r\n                        return BoardArray[x][y][0] === 3 ? splitHandler(x,y,'center') : incrementHandler(x,y)\r\n                    }\r\n                }, 300);\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkWinningStats = () => {\r\n        if(flag >= 3){\r\n        let reds = null\r\n        let greens = null\r\n        BoardArray.map(row => {\r\n            return row.map(block => block[1] !== null ? block[1] === 'red' ? reds+=1 : block[1] === 'green' ? greens+=1 : null : null)\r\n        })\r\n        if(reds === null && letMeIn){\r\n            letMeIn = false\r\n            clickable = false\r\n            document.getElementById('winBoard').style.display = 'block'\r\n        }\r\n        if(greens === null && letMeIn){\r\n            letMeIn = false\r\n            clickable = false\r\n            document.getElementById('winBoard').style.display = 'block'\r\n        }\r\n    }\r\n    }\r\n\r\n    const changeUser = () => {\r\n        Player === 'red' ? setPlayer('green') : setPlayer('red')\r\n    }\r\n\r\n    const winBoard = (name) => {\r\n        return (\r\n            <div className='winBoard' id='winBoard' style={{border:`6px solid ${Player === 'red' ? 'green' : 'red'}`}}>\r\n                <div style={{textAlign:'center',margin:'20px',opacity:'0.9'}}>ğŸ¥³ Player {Player  === 'red' ? 'green' : 'red'} Won ğŸ¥³</div><br />\r\n                <div style={{textAlign:'center'}} className='replay' onClick={() => window.location.reload()}>Replay ğŸ”ƒ</div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    const incrementHandler = (x,y) => {\r\n        let items = [...BoardArray]\r\n        let item = [...items[x][y]]\r\n        item[0] += 1\r\n        item[1] = Player\r\n        items[x][y] = item\r\n        setBoardArray(items)\r\n        checkWinningStats()\r\n    }\r\n\r\n    const setToZeroHandler = (x,y) => {\r\n        BoardArray[x][y][0] = 0\r\n        BoardArray[x][y][1] = null\r\n        setBoardArray([...BoardArray])\r\n    }\r\n\r\n    const splitHandler = (x,y,position) => {\r\n        switch (position) {\r\n            case 'corner':\r\n                return x === 0 && y === 0 ? \r\n                        \r\n                        (setToZeroHandler(x,y),  blockClickHandler(x,y+1), blockClickHandler(x+1,y)) : \r\n                        \r\n                        x === 0 && y === BoardColumns-1 ? \r\n\r\n                        (setToZeroHandler(x,y),  blockClickHandler(x,y-1), blockClickHandler(x+1,y)) : \r\n\r\n                        y === 0 && x === BoardRows-1 ? \r\n\r\n                        (setToZeroHandler(x,y),  blockClickHandler(x-1,y), blockClickHandler(x,y+1)) :\r\n\r\n                        x === BoardRows-1 && y === BoardColumns-1 ? \r\n\r\n                        (setToZeroHandler(x,y),  blockClickHandler(x-1,y), blockClickHandler(x,y-1)) :\r\n\r\n                        null\r\n\r\n            case 'side':\r\n                return x === 0 ? \r\n\r\n                        (setToZeroHandler(x,y), blockClickHandler(x,y-1), blockClickHandler(x,y+1), blockClickHandler(x+1,y)) :\r\n\r\n                        y === 0 ?\r\n\r\n                        (setToZeroHandler(x,y), blockClickHandler(x+1,y), blockClickHandler(x-1,y), blockClickHandler(x,y+1)) :\r\n\r\n                        x === BoardRows-1 ? \r\n\r\n                        (setToZeroHandler(x,y), blockClickHandler(x,y+1), blockClickHandler(x,y-1), blockClickHandler(x-1,y)) :\r\n                        \r\n                        y === BoardColumns-1 ? \r\n\r\n                        (setToZeroHandler(x,y), blockClickHandler(x+1,y), blockClickHandler(x-1,y), blockClickHandler(x,y-1)) :\r\n\r\n                        null\r\n\r\n            case 'center':\r\n                return (setToZeroHandler(x,y), blockClickHandler(x,y+1), blockClickHandler(x+1,y), blockClickHandler(x,y-1), blockClickHandler(x-1,y))\r\n\r\n            default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container' id='container'>\r\n            <div className='centerDiv'>\r\n            {\r\n                BoardArray.map((row,rowindex) => {\r\n                    return <div key={rowindex} style={{height:'50px'}}>\r\n                    {row.map((col,colindex) => {\r\n                        return <React.Fragment key={rowindex+colindex}>\r\n                            <div className='block'\r\n                                style={{border:`1px solid ${Player}`}}\r\n                                onClick={((BoardArray[rowindex][colindex][1] === Player || BoardArray[rowindex][colindex][1] === null)) ? () => blockClickHandler(rowindex,colindex,Player) : null}\r\n                                >\r\n                                <div className={BoardArray[rowindex][colindex][0] === 1 ? \r\n                                                    'one common' : \r\n                                                BoardArray[rowindex][colindex][0] === 2 ? \r\n                                                    'two common' : BoardArray[rowindex][colindex][0] === 3 ?\r\n                                                    'three common' : 'empty'}\r\n                                        style={{backgroundColor:BoardArray[rowindex][colindex][1]}}\r\n                                    >\r\n\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    \r\n                    })}\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n            {winBoard()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n","import React from 'react';\nimport './App.css';\nimport Board from './components/Board'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}