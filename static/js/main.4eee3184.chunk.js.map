{"version":3,"sources":["components/drop.mp3","components/Board.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","clickable","flag","window","onbeforeunload","e","Board","letMeIn","useState","BoardArray","setBoardArray","BoardColumns","setBoardColumns","BoardRows","setBoardRows","Player","setPlayer","localStorage","getItem","soundStatus","setSoundStatus","useEffect","setItem","innerWidth","innerHeight","a","Array","fill","b","map","i","blockClickHandler","x","y","changeUser","playSound","splitHandler","incrementHandler","setTimeout","Audio","drop","play","items","item","reds","greens","row","block","console","log","document","getElementById","style","display","checkWinningStats","setToZeroHandler","position","className","id","rowindex","key","height","col","colindex","Fragment","border","onClick","backgroundColor","marginTop","alignItems","color","right","fontSize","cursor","role","aria-label","textAlign","margin","opacity","location","reload","textTransform","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4eee3184.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drop.3327acfc.mp3\";","import React, { useEffect, useState } from 'react'\r\nimport './Board.css'\r\nimport drop from './drop.mp3'\r\nlet clickable = true\r\nlet flag = 0\r\n// const sound = new Audio(drop)\r\n// sound.playbackRate = 1.75\r\nwindow.onbeforeunload = function(e) {\r\n    return \"Reloading this page will reset the game\";\r\n};\r\n\r\nconst Board = () => {\r\n\r\n    let letMeIn = true\r\n\r\n    const [ BoardArray, setBoardArray ] = useState([])\r\n    const [ BoardColumns, setBoardColumns ] = useState('')\r\n    const [ BoardRows, setBoardRows ] = useState('')\r\n    const [ Player, setPlayer ] = useState('red')\r\n    const [ soundStatus, setSoundStatus ] = useState(localStorage.getItem('sound') || 'on')\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('sound',soundStatus)\r\n    },[soundStatus])\r\n\r\n    useEffect(() => {\r\n        setBoardColumns(~~(window.innerWidth/50))\r\n        setBoardRows(~~((window.innerHeight-40)/50))\r\n        let a = new Array(BoardRows).fill(0)\r\n        let b = a.map(i => a[i] = new Array(BoardColumns).fill([0,null]))\r\n        setBoardArray(b)\r\n    },[BoardRows,BoardColumns])\r\n\r\n    const blockClickHandler = (x,y,Player) => {\r\n        flag+=1\r\n        if(Player){\r\n            changeUser()\r\n            playSound()\r\n                if((x === 0 && y === 0) || (x === 0 && y === BoardColumns-1) || (y === 0 && x === BoardRows-1) || (x === BoardRows-1 && y === BoardColumns-1)){\r\n                    return BoardArray[x][y][0] === 1 ? splitHandler(x,y,'corner') : incrementHandler(x,y)\r\n                }else if(x === 0 || y === 0 || x === BoardRows-1 || y === BoardColumns-1){\r\n                    return BoardArray[x][y][0] === 2 ? splitHandler(x,y,'side') : incrementHandler(x,y)\r\n                }else{  \r\n                    return BoardArray[x][y][0] === 3 ? splitHandler(x,y,'center') : incrementHandler(x,y)\r\n                }\r\n            }else{\r\n                clickable = false   \r\n                setTimeout(() => {\r\n                    if((x === 0 && y === 0) || (x === 0 && y === BoardColumns-1) || (y === 0 && x === BoardRows-1) || (x === BoardRows-1 && y === BoardColumns-1)){\r\n                        return BoardArray[x][y][0] === 1 ? splitHandler(x,y,'corner') : incrementHandler(x,y)\r\n                    }else if(x === 0 || y === 0 || x === BoardRows-1 || y === BoardColumns-1){\r\n                        return BoardArray[x][y][0] === 2 ? splitHandler(x,y,'side') : incrementHandler(x,y)\r\n                    }else{  \r\n                        return BoardArray[x][y][0] === 3 ? splitHandler(x,y,'center') : incrementHandler(x,y)\r\n                    }\r\n                }, 200);\r\n            }\r\n    }\r\n\r\n    const playSound = () => {\r\n        return soundStatus && soundStatus === 'on' ? new Audio(drop).play() : null\r\n    }\r\n\r\n    const checkWinningStats = () => {\r\n        if((flag >= 2)  && letMeIn){\r\n            clickable = false\r\n            let reds = null\r\n            let greens = null\r\n            BoardArray.map(row => {\r\n                return row.map(block => block[1] !== null ? block[1] === 'red' ? reds+=1 : block[1] === 'green' ? greens+=1 : null : null)\r\n            })\r\n            if((reds === null || greens === null)){\r\n                console.log('win')\r\n                letMeIn = false\r\n                clickable = false\r\n                document.getElementById('winBoard').style.display = 'block'\r\n            }else{\r\n                clickable = true\r\n            }\r\n        }\r\n    }\r\n\r\n    const changeUser = () => {\r\n        Player === 'red' ? setPlayer('green') : setPlayer('red')\r\n    }\r\n\r\n    const soundButtonHandler = () => {\r\n        localStorage.getItem('sound') === 'on' ? localStorage.setItem('sound','off') : localStorage.setItem('sound','on')\r\n        setSoundStatus(localStorage.getItem('sound'))\r\n    }\r\n\r\n    const winBoard = () => {\r\n        return (\r\n            <div className='winBoard' id='winBoard'>\r\n                <div style={{textAlign:'center'}}>\r\n                <div style={{margin:'20px',opacity:'0.9'}}><span role='img' aria-label=\"celeb\">🥳&nbsp;</span><span style={{color:`${Player  === 'red' ? 'green' : 'red'}`}}>Player {Player  === 'red' ? 'green' : 'red'} Won</span><span role='img' aria-label=\"celeb\">&nbsp;🥳</span></div>\r\n                <div className='replay' onClick={() => {\r\n                    window.onbeforeunload = function(){};\r\n                    window.location.reload()\r\n                }}>R e p l a y&nbsp;<span role='img' aria-label=\"reload\">🔃</span></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const settings = () => {\r\n        return (\r\n            <div className='settings' id='settings'>\r\n                <div style={{textAlign:'center'}}>\r\n                <div style={{margin:'5px',opacity:'0.9'}}><span style={{color:'black'}}>Settings</span></div>\r\n                <div onClick={() => soundButtonHandler()}>\r\n                    {<span role='img' aria-label='sound'>{soundStatus && soundStatus === 'on' ? '🔊' : '🔇'}</span>}\r\n                </div>\r\n                <div className='restart' onClick={() => window.location.reload()}>R e s t a r t</div>\r\n                <div style={{opacity:0.3,fontSize:'10px',textTransform:'none'}}>Designed & Built with <span role='img' aria-label=\"love\">💙</span> by Tarun</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const settingsHandler = () => {\r\n        return document.getElementById('settings').style.display === 'block' ? document.getElementById('settings').style.display = 'none' : document.getElementById('settings').style.display = 'block'\r\n    }\r\n    \r\n    const incrementHandler = (x,y) => {\r\n        let items = [...BoardArray]\r\n        let item = [...items[x][y]]\r\n        item[0] += 1\r\n        item[1] = Player\r\n        items[x][y] = item\r\n        setBoardArray(items)\r\n        checkWinningStats()\r\n    }\r\n\r\n    const setToZeroHandler = (x,y) => {\r\n        clickable = false\r\n        BoardArray[x][y][0] = 0\r\n        BoardArray[x][y][1] = null\r\n        setBoardArray([...BoardArray])\r\n    }\r\n\r\n    const splitHandler = (x,y,position) => {\r\n        clickable = false\r\n        switch (position) {\r\n            case 'corner':\r\n                return x === 0 && y === 0 ? \r\n                        \r\n                        (setToZeroHandler(x,y),  blockClickHandler(x,y+1), blockClickHandler(x+1,y)) : \r\n                        \r\n                        x === 0 && y === BoardColumns-1 ? \r\n\r\n                        (setToZeroHandler(x,y),  blockClickHandler(x,y-1), blockClickHandler(x+1,y)) : \r\n\r\n                        y === 0 && x === BoardRows-1 ? \r\n\r\n                        (setToZeroHandler(x,y),  blockClickHandler(x-1,y), blockClickHandler(x,y+1)) :\r\n\r\n                        x === BoardRows-1 && y === BoardColumns-1 ? \r\n\r\n                        (setToZeroHandler(x,y),  blockClickHandler(x-1,y), blockClickHandler(x,y-1)) :\r\n\r\n                        null\r\n\r\n            case 'side':\r\n                return x === 0 ? \r\n\r\n                        (setToZeroHandler(x,y), blockClickHandler(x,y-1), blockClickHandler(x,y+1), blockClickHandler(x+1,y)) :\r\n\r\n                        y === 0 ?\r\n\r\n                        (setToZeroHandler(x,y), blockClickHandler(x+1,y), blockClickHandler(x-1,y), blockClickHandler(x,y+1)) :\r\n\r\n                        x === BoardRows-1 ? \r\n\r\n                        (setToZeroHandler(x,y), blockClickHandler(x,y+1), blockClickHandler(x,y-1), blockClickHandler(x-1,y)) :\r\n                        \r\n                        y === BoardColumns-1 ? \r\n\r\n                        (setToZeroHandler(x,y), blockClickHandler(x+1,y), blockClickHandler(x-1,y), blockClickHandler(x,y-1)) :\r\n\r\n                        null\r\n\r\n            case 'center':\r\n                return (setToZeroHandler(x,y), blockClickHandler(x,y+1), blockClickHandler(x+1,y), blockClickHandler(x,y-1), blockClickHandler(x-1,y))\r\n\r\n            default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container' id='container'>\r\n            <div className='centerDiv'>\r\n            {\r\n                BoardArray.map((row,rowindex) => {\r\n                    return <div key={rowindex} style={{height:'50px'}}>\r\n                    {row.map((col,colindex) => {\r\n                        return <React.Fragment key={rowindex+colindex}>\r\n                            <div className='block'\r\n                                style={{border:`1px solid ${Player}`}}\r\n                                onClick={((BoardArray[rowindex][colindex][1] === Player || BoardArray[rowindex][colindex][1] === null) && clickable) ? () => blockClickHandler(rowindex,colindex,Player) : null}\r\n                                >\r\n                                <div className={BoardArray[rowindex][colindex][0] === 1 ? \r\n                                                    'one common' : \r\n                                                BoardArray[rowindex][colindex][0] === 2 ? \r\n                                                    'two common' : BoardArray[rowindex][colindex][0] === 3 ?\r\n                                                    'three common' : 'empty'}\r\n                                        style={{backgroundColor:BoardArray[rowindex][colindex][1]}}\r\n                                    >\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    \r\n                    })}\r\n                    </div>\r\n                })\r\n            }\r\n        <div className='footer' style={{marginTop:'10px'}}>\r\n            <div style={{display:'flex',alignItems:'center'}}>\r\n            <div style={{color:'skyblue'}} id=\"shsf\">∘ C H A I N • R E A C T I O N ∘</div>\r\n            <div style={{position:'absolute',right:'5px',fontSize:'20px',cursor:'pointer'}} onClick={() => settingsHandler()}>&nbsp;<span role='img' aria-label=\"settings\"><b>⚙</b></span>&nbsp;</div>\r\n        </div>\r\n        </div>\r\n        </div>  \r\n            {winBoard()}\r\n            {settings()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n","import React from 'react';\nimport './App.css';\nimport Board from './components/Board'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}